[{"/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/index.js":"1","/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/reportWebVitals.js":"2","/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/App.js":"3","/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/Todo.js":"4","/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/firebase.js":"5"},{"size":500,"mtime":1609863544756,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1609863544764,"results":"8","hashOfConfig":"7"},{"size":1741,"mtime":1610122296772,"results":"9","hashOfConfig":"7"},{"size":1864,"mtime":1610133465168,"results":"10","hashOfConfig":"7"},{"size":465,"mtime":1610051377115,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9cs7pz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/index.js",[],["24","25"],"/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/reportWebVitals.js",[],"/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/App.js",[],"/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/Todo.js",["26"],"import React, { useState } from 'react';\nimport { Modal, List, ListItem, ListItemText, makeStyles, Button } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport './Todo.css';\nimport db from './firebase';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        position: 'absolute',\n        width: 400,\n        backgroundColor: theme.palette.background.paper,\n        border: '2px solid #000',\n        boxShadow: theme.shadows[5],\n        padding: theme.spacing(2, 4, 3),\n    },\n}));\n\n\n\nfunction Todo(props) {\n\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [input, setInput] = useState();\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const updateTodo = () => {\n        // update todo with the new input text\n\n        db.collection('todos').doc(props.todo.id).set({\n            todo: input\n        }, { merge: true });\n\n        setOpen(false);\n    }\n\n\n    return (\n        <>\n            <Modal\n                open={open}\n                onClose={e => setOpen(false)}\n            >\n                <div className={classes.paper}>\n                    <h1>I am modal</h1>\n                    <input placeholder={props.todo.todo} value={input} onChange={event => setInput(event.target.value)} />\n                    <Button onClick={updateTodo}>Update Todo</Button>\n                </div>\n            </Modal>\n            <List>\n                <ListItem className='todo__list'>\n                    <ListItemText primary={props.todo.todo} secondary='todo...' />\n                </ListItem>\n                <button onClick={e => setOpen(true)}>EDIT</button>\n                <DeleteForeverIcon onClick={event => db.collection('todos').doc(props.todo.id).delete()}>DELETE</DeleteForeverIcon>\n            </List>\n        </>\n    )\n}\n\nexport default Todo","/Users/agujex/agujex_HOME/knowledge/REACT/TODOFirebase/todo_app/src/firebase.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":26,"column":11,"nodeType":"33","messageId":"34","endLine":26,"endColumn":21},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'handleOpen' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]